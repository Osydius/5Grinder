<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var currentLevelID = room_next(room)

//loop vertically
for (loop_y=0; loop_y&lt;10; loop_y++)
{
    //loop horizontally
    for (loop_x=0; loop_x&lt;5; loop_x++)
    {
        var box_x = loop_x*100+32
        var box_y = loop_y*50+32
        
        var currentLevelName = room_get_name(currentLevelID)
        var currentLevelNumber = real(string_replace(currentLevelName,'level_',''))
        
        if currentLevelNumber &lt;= global.room_furthest_reached
        {
            if checkMouseInRectangle(box_x,box_y,box_x+32,box_y+32)
            {
                if mouse_check_button_released(mb_left)
                {
                    if room_exists(currentLevelID)
                    {
                        room_goto(currentLevelID)
                    }
                    
                }
            }
        }
        
        currentLevelID = room_next(currentLevelID)
    }
}

var room_centre = room_width/2
if checkMouseInRectangle(room_centre-113,room_height-50,room_centre+113,room_height-18)
{
    if mouse_check_button(mb_left)
    {
        room_goto(welcome_menu)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_white)
// set the font to the same font as the menu
// draw_set_font()

var currentLevel = 1

//loop vertically
for (box_y=0; box_y&lt;10;box_y++)
{
    //loop horizontally
    for (box_x=0; box_x&lt;5; box_x++)
    {
        var draw_x = box_x*100+32
        var draw_y = box_y*50+32
        
        if currentLevel &lt;= global.room_furthest_reached
        {
            if checkMouseInRectangle(draw_x,draw_y,draw_x+32,draw_y+32)
            {
                draw_sprite(spr_level_select_box_hover,-1,draw_x,draw_y)
            } else
            {
                draw_sprite(spr_level_select_box,-1,draw_x,draw_y)
            }
        } else 
        {
            draw_sprite(spr_level_select_blocked,-1,draw_x,draw_y)
        }
        
        draw_text(draw_x,draw_y,string(currentLevel))
        
        currentLevel += 1
    }
    
}

// place back button
var room_centre = room_width/2
if checkMouseInRectangle(room_centre-113,room_height-50,room_centre+113,room_height-18)
{
    draw_sprite(spr_back_to_main_menu_hover,-1,room_centre,room_height-34)
} else 
{
    draw_sprite(spr_back_to_main_menu,-1,room_centre,room_height-34)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
