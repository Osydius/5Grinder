<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_metal</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_block_conductive</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>electric = 0
electricduration = 30
electriccooldown = 60

electrictimer = 0
electriccooldowntimer = 0

ice = 0
iceduration = 30
icecooldown = 60

icetimer = 0
icecooldowntimer = 0

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Reduce the timer for when the block runs out of electric and turns back to normal
if electrictimer &gt; 0 
{
    electrictimer -= 1
    if electrictimer == 0
    {
        electric = 0
    }
}

// Reduces the cooldown until the block can become electric again.
if electriccooldowntimer &gt; 0
{
    electriccooldowntimer -= 1
}

// Set the timers for ice conductivity
if icetimer &gt; 0 
{
    icetimer -= 1
    if icetimer = 0{
        ice = 0
    }
}

if icecooldowntimer &gt;0
{
    icecooldowntimer -= 1
}


    
    // Check for surrounding electrical objects
    var electricUpdate = checkElectricNeighbours(x,y,electriccooldowntimer)
    if electricUpdate
    {
        electric = 1
        electrictimer = electricduration
        electriccooldowntimer = electriccooldown
    }
    
    
    // Check for surrounding icey objects
    var iceUpdate = checkIceNeighbours(x,y,icecooldowntimer)
    if iceUpdate
    {
        ice = 1
        icetimer = iceduration
        icecooldowntimer = icecooldown
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_dynamite_lava">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_dynamite_ice">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if icecooldowntimer = 0{
    ice = 1
    icetimer = iceduration
    icecooldowntimer = icecooldown
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_dynamite_electric">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if electriccooldowntimer = 0
{
    electric = 1
    electrictimer = electricduration
    electriccooldowntimer = electriccooldown
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if electric = 0 and ice = 0{
    draw_sprite_ext(spr_metal,0,x,y,1,1,0,c_white,255)
}
else if electric = 1 and ice = 0{
    draw_sprite_ext(spr_metal,1,x,y,1,1,0,c_white,255)
}
else{
    draw_sprite_ext(spr_metal,2,x,y,1,1,0,c_white,255)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>17,17</point>
  </PhysicsShapePoints>
</object>
