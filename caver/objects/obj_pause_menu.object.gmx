<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>resume_y = 250
main_menu_y = 350
exit_game_y = 450

pause_sprite = sprite_create_from_surface(application_surface, 0, 0, surface_get_width(application_surface), surface_get_height(application_surface), false, false, 0, 0)
instance_deactivate_all(true)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var room_centre_x = floor(room_width/2)

// check click on resume button
if checkMouseInRectangle(room_centre_x-48,resume_y-16,room_centre_x+48,resume_y+16)
{
    if mouse_check_button(mb_left)
    {
        instance_activate_all()
        sprite_delete(pause_sprite)
        instance_destroy()
    }
}

// check click on main menu button
if checkMouseInRectangle(room_centre_x-48,main_menu_y-16,room_centre_x+48,main_menu_y+16)
{
    if mouse_check_button(mb_left)
    {
        saveGame()
        sprite_delete(pause_sprite)
        room_goto(welcome_menu)
    }
}

// check click on exit game button
if checkMouseInRectangle(room_centre_x-48,exit_game_y-16,room_centre_x+48,exit_game_y+16)
{
    if mouse_check_button(mb_left)
    {
        saveGame()
        sprite_delete(pause_sprite)
        game_end()
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var room_centre_x = floor(room_width/2)

draw_set_colour(c_white)

if sprite_exists(pause_sprite)
{
    draw_sprite(pause_sprite,-1,0,0)
}


// draw resume button
if checkMouseInRectangle(room_centre_x-48,resume_y-16,room_centre_x+48,resume_y+16)
{
    draw_sprite(spr_pause_menu_block_hover,-1,room_centre_x,resume_y)
} else
{
    draw_sprite(spr_pause_menu_block,-1,room_centre_x,resume_y)
}
draw_text(room_centre_x-48,resume_y-16,'Resume')

// draw main menu button
if checkMouseInRectangle(room_centre_x-48,main_menu_y-16,room_centre_x+48,main_menu_y+16)
{
    draw_sprite(spr_pause_menu_block_hover,-1,room_centre_x,main_menu_y)
} else
{
    draw_sprite(spr_pause_menu_block,-1,room_centre_x,main_menu_y)
}
draw_text(room_centre_x-48,main_menu_y-16,'Main Menu')

// draw exit game button
if checkMouseInRectangle(room_centre_x-48,exit_game_y-16,room_centre_x+48,exit_game_y+16)
{
    draw_sprite(spr_pause_menu_block_hover,-1,room_centre_x,exit_game_y)
} else
{
    draw_sprite(spr_pause_menu_block,-1,room_centre_x,exit_game_y)
}
draw_text(room_centre_x-48,exit_game_y-16,'Exit Game')
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
